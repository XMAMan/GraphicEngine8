//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GraphicPipelineDirect3D11.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GraphicPipelineDirect3D11.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die struct PatchTess
        ///{
        ///        float EdgeTess[3] : SV_TessFactor;
        ///        float InsideTess  : SV_InsideTessFactor;
        ///};
        ///
        ///PatchTess PatchHS(InputPatch&lt;PS_IN,3&gt; patch, 
        ///                  uint patchID : SV_PrimitiveID)
        ///{
        ///        PatchTess pt;
        ///        
        ///        // Average tess factors along edges, and pick an edge tess factor for 
        ///        // the interior tessellation.  It is important to do the tess factor
        ///        // calculation based on the edge properties so that edges shared by 
        ///        // more than o [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string DisplacementMapping {
            get {
                return ResourceManager.GetString("DisplacementMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die //...........................Linien und Punkte .........................
        ///
        ///struct VS_OUT_Simple
        ///{
        ///	float3 pos : POSITION;
        ///};
        ///
        ///struct PS_IN_Simple
        ///{
        ///	float4 pos : SV_POSITION;
        ///};
        ///
        ///VS_OUT_Simple VShaderSimpleDraw(float3 pos : POSITION)
        ///{
        ///	VS_OUT_Simple output = (VS_OUT_Simple)0;
        ///	output.pos = pos;
        ///	return output;
        ///}
        ///
        /////http://msdn.microsoft.com/en-us/library/windows/desktop/bb509609(v=vs.85).aspx	-&gt; Erklärung zur Syntax für den Geometryshader
        ///[maxvertexcount(100)]  //So viele Vertexe kommen  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string LinesAndPoints {
            get {
                return ResourceManager.GetString("LinesAndPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PS_IN VS_MouseHit(VS_IN input) 
        ///{
        ///	PS_IN output = (PS_IN)0;
        ///
        ///	output.pos = mul(float4(input.pos.xyz, 1.0), WorldViewProj);
        ///	output.col = input.col;
        ///	output.tex = float2(input.tex.x * TexturScaleFaktorX, input.tex.y * TexturScaleFaktorY);	
        ///	
        ///	return output;
        ///}
        ///
        ///float4 PS_MouseHit( PS_IN input ) : SV_Target
        ///{
        ///	float4 objektColor = CurrentColor * (1 - UseTexture0) + GetTexelFromColorTexture(input.tex) * UseTexture0 * CurrentColor;	
        ///
        ///	if (BlendingBlackColor &amp;&amp; (objektColor.x + objektColor.y + obje [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string MouseHitTest {
            get {
                return ResourceManager.GetString("MouseHitTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die //////////////////////////// Parallax Mapping//////////////////////////////
        /////Quelle: http://www.gamedev.net/page/resources/_/technical/graphics-programming-and-theory/a-closer-look-at-parallax-occlusion-mapping-r3262 -&gt; Er rechnet in Weltkoordinaten. Ich habes es auf Augkoordinaten umgestellt
        ///PS_IN VS_Parallax(VS_IN input) 
        ///{
        ///	PS_IN output = (PS_IN)0;
        ///
        ///	output.pos = mul(float4(input.pos.xyz, 1.0), WorldViewProj);
        ///	output.col = input.col;
        ///	output.tex = float2(input.tex.x * TexturScaleFaktorX, input. [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string ParallaxMapping {
            get {
                return ResourceManager.GetString("ParallaxMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PS_IN VS_ShadowmapCreation(VS_IN input)
        ///{
        ///	PS_IN output = (PS_IN)0;
        ///	output.pos = mul(float4(input.pos.xyz, 1.0), ShadowMatrix);
        ///	//output.pos = mul(float4(input.pos.xyz, 1.0), WorldViewProj);
        ///	output.tex = float2(input.tex.x * TexturScaleFaktorX, input.tex.y * TexturScaleFaktorY);	
        ///
        ///	return output;
        ///}
        ///
        ///struct PS_OUTPUT
        ///{
        ///    float4 Color: SV_Target0;
        ///    float Depth: SV_Depth;
        ///};
        ///
        /////float PS_ShadowmapCreation( PS_IN input ) : SV_Depth
        ///PS_OUTPUT PS_ShadowmapCreation( PS_IN input )
        ///{
        ///	PS_OU [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string ShadowmapCreation {
            get {
                return ResourceManager.GetString("ShadowmapCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die struct VS_IN
        ///{
        ///	float3 pos : POSITION;
        ///	float4 col : COLOR0;
        ///	float2 tex : TEXCOORD;
        ///	float3 Normal : NORMAL;
        ///	float3 Tangent : TANGENT;
        ///};
        ///
        /////Superwichtige Anmwerkung: Abhängig von den, was hinter : steht (NORMAL, POSITION, TANGENT) werden dieser Parameter UNTERSCHIEDLICH!!! über
        /////das Dreieck interpoliert. Die Formel: &quot;InterpolationPoint = (1 - f) * Pos1 + f * Pos2&quot; wird anscheinend nur für POSITION-Variablen verwendet.
        /////Für NORMAL und TANGENT-Variablen gibt es eine andere Formel, die ich noch [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string SimpleRendering {
            get {
                return ResourceManager.GetString("SimpleRendering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die // Nonnumeric values cannot be added to a cbuffer.
        ///Texture2D Texture0;					// Speichert die aktuell gesetzte Textur-ID. Wird mit m_effectPass vom HS in GraKa kopiert (Zum kopieren in den Shader)	-&gt; Darf nicht im Constant-Buffer gespeichert werden
        ///Texture2D Texture1;					// Bumpmaptextur
        ///TextureCube CubeMapTexture;			// Cubemap für Reflektionen
        ///Texture2D ShadowTexture;			// Shadowmapping
        ///float4 CurrentColor;
        ///
        /////http://alt.3dcenter.org/artikel/grafikfilter/ -&gt; Was sind Texturfilter überhaupt?
        ///
        ///Sample [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Variablen {
            get {
                return ResourceManager.GetString("Variablen", resourceCulture);
            }
        }
    }
}
